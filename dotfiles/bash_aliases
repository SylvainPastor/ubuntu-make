
## Sudo fixes
alias install='sudo apt-get install'
alias remove='sudo apt-get remove'
alias update='sudo apt-get update'
alias upgrade='sudo apt-get update && sudo apt-get upgrade'

#---------------------------------------------#
#             [ Simple Aliases ]              #
#---------------------------------------------#
alias cp='cp -i'
alias mv='mv -i'
alias mkdir='mkdir -p -v'
alias df='df -h'
alias du='du -h -c'
alias reload='source ~/.bashrc'
alias c="clear"
alias trash="rm -fr ~/.Trash"
alias biggest='BLOCKSIZE=1048576; du -x | sort -nr | head -10'

#---------------------------------------------#
#           [ Directory Aliaes ]              #
#---------------------------------------------#
alias back='cd $OLDPWD'
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."
alias disk="cd /"
alias documents='cd ~/Documents'
alias downloads='cd ~/Downloads'
alias images='cd ~/Pictures'

#---------------------------------------------#
#                 [ App Aliases ]             #
#---------------------------------------------#

#---------------------------------------------#
#               [ Script Aliases ]            #
#---------------------------------------------#

#---------------------------------------------#
#                 [ SUDO Aliases ]            #
#---------------------------------------------#

#---------------------------------------------#
#                 [ Dev Aliases ]             #
#---------------------------------------------#

#---------------------------------------------#
#                 [ Misc ]                    #
#---------------------------------------------#

#------------------------------------------////
# Functions and Scripts:
#------------------------------------------////

upinfo ()
{
echo -ne "\t ";uptime | awk /'up/ {print $3,$4,$5,$6,$7,$8,$9,$10}'
}

# Creates an archive from given directory
mktar() { tar cvf  "${1%%/}.tar"     "${1%%/}/"; }
mktgz() { tar cvzf "${1%%/}.tar.gz"  "${1%%/}/"; }
mktbz() { tar cvjf "${1%%/}.tar.bz2" "${1%%/}/"; }

# [ Encryption/Decryption ]
function encrypt()
{
gpg -ac -no-options "$1"
}
    
function decrypt()
{
gpg -no-options "$1"
}
     
# [ Extraction ]
function extract()
{
if [ -f $1 ] ; then
case $1 in
*tar.bz2)   tar xvjf $1     ;;
*.tar.gz)    tar xvzf $1     ;;
*.bz2)       bunzip2 $1      ;;
*.rar)       unrar x $1      ;;
*.gz)        gunzip $1       ;;
*.tar)       tar xvf $1      ;;
*.tbz2)      tar xvjf $1     ;;
*.tgz)       tar xvzf $1     ;;
*.zip)       unzip $1        ;;
*.Z)         uncompress $1   ;;
*.7z)        7z x $1         ;;
*)           echo "'$1' cannot be extracted via >extract<" ;;
esac
else
echo "'$1' is not a valid file!"
fi
}

# Creates an archive (*.tar.gz) from given directory.
function maketar() { tar cvzf "${1%%/}.tar.gz"  "${1%%/}/"; }
     
# Create a ZIP archive of a file or folder.
function makezip() { zip -r "${1%%/}.zip" "$1" ; }
     
# Make your directories and files access rights sane.
function sanitize() { chmod -R u=rwX,g=rX,o= "$@" ;}
